load("@fbcode_macros//build_defs:rust_binary.bzl", "rust_binary")
load("@fbcode_macros//build_defs:rust_library.bzl", "rust_library")
load("@fbcode_macros//build_defs:rust_unittest.bzl", "rust_unittest")

oncall("autocargo")

rust_library(
    name = "panichandler",
    srcs = glob(["src/*.rs"]),
    autocargo = {
        "cargo_toml_config": {
            "lints": {
                "rust": {
                    "unexpected_cfgs": {
                        "check-cfg": ["cfg(fbcode_build)"],
                        "level": "warn",
                    },
                },
            },
            "package": {
                "description": "Makes it easier to define a handler for panics",
            },
        },
    },
    os_deps = [
        (
            "linux",
            [
                "fbsource//third-party/rust:libc",
            ],
        ),
        (
            "macos",
            [
                "fbsource//third-party/rust:libc",
            ],
        ),
    ],
    tests = [
        ":panichandler_tests",
    ],
    unittests = False,
    deps = [
        "fbsource//third-party/rust:backtrace",
    ],
)

rust_binary(
    name = "shed_panic_simple",
    srcs = [
        "test/shed_panic_simple.rs",
    ],
    unittests = False,
    deps = [
        ":panichandler",
    ],
)

rust_binary(
    name = "shed_panic_deep",
    srcs = [
        "test/shed_panic_deep.rs",
    ],
    unittests = False,
    deps = [
        ":panichandler",
    ],
)

rust_binary(
    name = "shed_panic_multithread",
    srcs = [
        "test/shed_panic_multithread.rs",
    ],
    unittests = False,
    deps = [
        ":panichandler",
    ],
)

rust_binary(
    name = "shed_panic_multithread_abort",
    srcs = [
        "test/shed_panic_multithread_abort.rs",
    ],
    os_deps = [
        (
            "linux",
            [
                "fbsource//third-party/rust:libc",
            ],
        ),
        (
            "macos",
            [
                "fbsource//third-party/rust:libc",
            ],
        ),
    ],
    unittests = False,
    deps = [
        ":panichandler",
    ],
)

rust_unittest(
    name = "panichandler_tests",
    srcs = [
        "test/testrunner.rs",
    ],
    # * fbcode_build builds use buck resources to get the binary names.
    # * Cargo builds use Cargo to get the binary names.
    # * non-fbcode_build builds (aka //mode/dev-rust-oss) can't do either,
    #   so ignore it.
    allow_oss_build = False,
    crate_root = "test/testrunner.rs",
    resources = {
        "shed_panic_deep": "//common/rust/shed/panichandler:shed_panic_deep",
        "shed_panic_multithread": "//common/rust/shed/panichandler:shed_panic_multithread",
        "shed_panic_multithread_abort": "//common/rust/shed/panichandler:shed_panic_multithread_abort",
        "shed_panic_simple": "//common/rust/shed/panichandler:shed_panic_simple",
    },
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:assert_cmd",
        "fbsource//third-party/rust:buck-resources",
        "fbsource//third-party/rust:predicates",
    ],
)
